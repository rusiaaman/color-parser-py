name: Build Wheels

on:
  push:
    tags:
      - v*
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux builds for all Python versions
          - os: ubuntu-20.04
            python: "3.8"
          - os: ubuntu-20.04
            python: "3.9"
          - os: ubuntu-20.04
            python: "3.10"
          - os: ubuntu-20.04
            python: "3.11"
          - os: ubuntu-20.04
            python: "3.12"
          # Windows builds for all Python versions
          - os: windows-2019
            python: "3.8"
          - os: windows-2019
            python: "3.9"
          - os: windows-2019
            python: "3.10"
          - os: windows-2019
            python: "3.11"
          - os: windows-2019
            python: "3.12"
          # macOS - build only for latest Python since wheels are compatible
          - os: macos-12
            python: "3.12"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build wheels
        uses: messense/maturin-action@v1
        timeout-minutes: 30
        with:
          maturin-version: latest
          command: build
          args: --release -i python${{ matrix.python }} --out dist --target universal2-apple-darwin

      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        uses: messense/maturin-action@v1
        with:
          maturin-version: latest
          command: sdist

      - uses: actions/upload-artifact@v3
        with:
          name: sdist
          path: target/wheels/*.tar.gz

  create_release:
    name: Create Release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v3
        with:
          path: dist

      - name: Display structure of downloaded files
        run: ls -R dist/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/wheels/*.whl
            dist/sdist/*.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true